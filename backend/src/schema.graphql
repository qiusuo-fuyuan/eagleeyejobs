enum UserType {
  RECRUITER
  TEMPORARY_USER
  ENTRY_MEMBERSHIP
  INTERMEDIATE_MEMBERSHIP
  ADVANCED_MEMBERSHIP
}


type MemberShipStatus {
  lastPaymentAt: String!
  willExpireAt: String!
}

type User {
  email: String
  name: String
  firstName: String
  lastName: String
  companyName: String
  role: UserType
  membershipStatus: MemberShipStatus
}

input UserRegistrationInput {
  email: String!
  firstName: String
  lastName: String
  companyName: String
    
}

type Job {
    _id: String!
    title: String!
    description: String
    companyName: String!
    country: String!
    city: String!
    address: String
    createdAt: String
    updatedAt: String
}

input JobInput {
  title: String!
  description: String!
  companyName: String
  country: String
  city: String
  address: String
}

input JobUpdate {
  _id: String!
  title: String
  description: String
  companyName: String
  country: String
  city: String
  address: String
}
  
type JobSearchPagingResult {
  jobs: [Job]
  pageSize: Int
  pageNumber: Int
  totalCount: Int
}

type Query {
  ### Job related
  searchJobs(userInput: String, pageNumber: Int): JobSearchPagingResult
  jobDetail(jobId: String!): Job

  ### Registration related
  requestLoginQrCodeImage(provider: String): String
}

type Mutation {
  ### Job related
  addJob(job: JobInput): Job
  updateJob(job: JobUpdate): Job
  removeJob(jobId: String!): Job

  ### Registration related
  registerNewUser: String
}
import { DocumentSchemaDefinitionType } from "./BaseTypes.js"

export const UserDocumentSchemaDefinition: DocumentSchemaDefinitionType = 
{
    name: "User",
    tableName: 'user',
    schemaDefinition: {
        userId: {
            type: String,
            unique: true,
            index: true
        },
        email: {
            type: String,
            unique: true 
        },
        name: String,
        nickName: String,
        firstName: String,
        lastName: String,
        gender: Number,
        role: String,
        platform: String,
        openid: String, //this can not be empty when platform="wechat" or others for identifying one user
    }
}

export enum UserType {
    RECRUITER = "RECRUITER",
    NORMAL_USER = "NORMAL_USER", 
    ENTRY_MEMBERSHIP = "ENTRY_MEMBERSHIP", 
    INTERMEDIATE_MEMBERSHIP = "INTERMEDIATE_MEMBERSHIP",
    ADVANCED_MEMBERSHIP = "ADVANCED_MEMBERSHIP",
    ANONYMOUS = "ANONYMOUS",
    ADMIN = "ADMIN"
}

export class MemberShipStatus {
    lastPaymentAt: String
    willExpireAt: String
}

export class User {
    /**
     * This is the internal id generated by mongodb internally. We will not
     * not use this field normally
     */
    _id?: string
    /**
     * This is the id that we  use in our business case. For example, in Europe, normally
     * user email will be set as the ID. For wechat, or alipay users, we will set this value
     * as as the openid
     */
    userId: string
    email: string
    name: string
    profilePicture: string
    gender: number
    role: UserType
    nickName?: string
    firstName?: string
    lastName?: string
    companyName?: string
    membershipStatus?: MemberShipStatus
        
    //platform denotes where the user come from "wechat or alipay"
    platform?: string
    openid?: string
}